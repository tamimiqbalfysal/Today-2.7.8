
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /users/{userId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if (request.auth != null && request.auth.uid == userId) || isAdmin();
    }

    match /usernames/{username} {
        allow read;
        allow create: if request.auth != null;
    }
    
    match /posts/{postId}/{document=**} {
      allow read, write: if request.auth != null;
    }

    match /giftCodes/{code} {
        allow read, update: if request.auth != null;
        allow create: if isAdmin();
    }
    
    match /thinkCodes/{code} {
        allow read, update: if request.auth != null;
        allow create: if isAdmin();
    }
    
    match /courseAdmin/{courseId} {
      allow read;
      allow write: if isAdmin();
    }
    
    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if isAdmin() || (request.auth.token.email == 'tamimiqbal.fysal@gmail.com' && request.auth.uid == adminId);
      allow list: if isAdmin();
    }
    
     match /chats/{chatId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants
    }
    
     match /finditItems/{itemId} {
      allow read;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }

     match /bloodRequests/{requestId} {
      allow read;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }

    match /gigs/{gigId} {
        allow read;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.sellerId;
    }
  }
}
