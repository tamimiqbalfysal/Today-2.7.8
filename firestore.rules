
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isAdmin();

      // Allow admins to list users for giveaway distribution
      allow list: if isAdmin();
    }

    match /usernames/{username} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
    }

    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == resource.data.authorId || isAdmin();
      
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null;
      }

      match /preorders/{preorderId} {
        allow read: if true;
        allow create: if request.auth != null;
      }
    }
    
    match /giftCodes/{codeId} {
      allow read, write: if request.auth != null;
      // Allow admins to list all gift codes
      allow list: if isAdmin();
    }

    match /thinkCodes/{codeId} {
      allow read, write: if request.auth != null;
    }
    
    match /courseAdmin/{courseId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    match /think_free_class_registrations/{registrationId} {
      allow read, create: if true;
    }
    
    match /gigs/{gigId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && (request.auth.uid == resource.data.sellerId || isAdmin());
    }

    match /chats/{chatId} {
        allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;
        
        match /messages/{messageId} {
            allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        }
    }
    
    match /finditItems/{itemId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow delete: if request.auth.uid == resource.data.authorId || isAdmin();
    }
    
    match /admins/{adminId} {
        allow read, list: if isAdmin();
        allow create, delete: if isAdmin();
    }
    
     match /users/{userId}/giveawayHistory/{historyId} {
        allow read, create: if request.auth.uid == userId || isAdmin();
     }
  }
}
